name: PR Description Check

on:
  pull_request_target:
    types: [opened, edited, reopened]

permissions:
  issues: write
  pull-requests: write

jobs:
  check-pr-description:
    runs-on: ubuntu-latest

    steps:
    - name: Check PR Description and Issue Reference
      id: check_pr
      run: |
        description_missing=false
        issue_reference_missing=false
        pr_body="${{ github.event.pull_request.body }}"

        # Check for Description header
        if ! echo "$pr_body" | grep -q "^## Description"; then
          description_missing=true
        fi

        # Check for issue reference in the format Fixes #
        if ! echo "$pr_body" | grep -q "Fixes #\|Fixes #NEW"; then
          issue_reference_missing=true
        fi

        # Set output variables for further conditional checks
        echo "description_missing=$description_missing" >> $GITHUB_ENV
        echo "issue_reference_missing=$issue_reference_missing" >> $GITHUB_ENV

    - name: Add Comment Based on Check Results
      if: env.description_missing == 'true' || env.issue_reference_missing == 'true'
      run: |
        if [ "$description_missing" = "true" ] && [ "$issue_reference_missing" = "true" ]; then
          COMMENT="Error: PR description is missing the 'Description' header and an issue reference in the format 'Fixes #' or 'Fixes #NEW'."
        elif [ "$description_missing" = "true" ]; then
          COMMENT="Error: PR description is missing the 'Description' header."
        elif [ "$issue_reference_missing" = "true" ]; then
          COMMENT="Error: PR description is missing an issue reference in the format 'Fixes #' or 'Fixes #NEW'."
        fi

        # Add comment to the PR
        PAYLOAD=$(jq -nc --arg body "$COMMENT" '{body: $body}')
        RESPONSE=$(curl -s -o response.json -w "%{http_code}" \
          -X POST \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments \
          -d "$PAYLOAD")
        cat response.json
        if [ "$RESPONSE" -ne 201 ]; then
          echo "Failed to add comment"
          exit 1
        fi

    - name: Thank You Comment
      if: env.description_missing == 'false' && env.issue_reference_missing == 'false'
      run: |
        COMMENT="Thank you for submitting your pull request! We'll review it as soon as possible. Your contributions are highly appreciated! ðŸ˜Š"
        PAYLOAD=$(jq -nc --arg body "$COMMENT" '{body: $body}')
        RESPONSE=$(curl -s -o response.json -w "%{http_code}" \
          -X POST \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments \
          -d "$PAYLOAD")
        cat response.json
        if [ "$RESPONSE" -ne 201 ]; then
          echo "Failed to add comment"
          exit 1
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
